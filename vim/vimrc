set runtimepath+=/opt/vim/bundle
let s:taskRuntimePath = $LAMBDA_TASK_ROOT . "/vim"
set runtimepath+=s:taskRuntimePath

function! LambdaHandler()
  let V = vital#lambda_vim_layer#new()
  let HTTP = V.import('Web.HTTP')
  let handlerInfo = split($_HANDLER, '\.')
  let handlerFile = $LAMBDA_TASK_ROOT . "/" . handlerInfo[0] . ".vim"
  let handlerMethod = handlerInfo[1]
  if filereadable(expand(handlerFile))
    execute 'source ' . fnameescape(handlerFile)
  endif
  while 1
    let nextEvent = HTTP.get("http://".$AWS_LAMBDA_RUNTIME_API."/2018-06-01/runtime/invocation/next")
    let eventHeader = HTTP.parseHeader(nextEvent.header)
    let requestId = eventHeader['Lambda-Runtime-Aws-Request-Id']
    let result = function(handlerMethod)()
    call HTTP.post("http://".$AWS_LAMBDA_RUNTIME_API."/2018-06-01/runtime/invocation/".requestId."/response", result)
  endwhile
endfunction

autocmd VimEnter * call LambdaHandler()
